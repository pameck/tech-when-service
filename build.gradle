buildscript {
	ext.kotlin_version = '1.2.31'
	ext.junit_version = '1.1.1'
	ext.spek_version = '1.1.5'

	dependencies {
		classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_version"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.2.31'
	id 'com.github.ben-manes.versions' version '0.17.0'
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'kotlin'

repositories {
	mavenCentral()
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	compile 'org.jetbrains.kotlin:kotlin-reflect'

	testCompile 'com.natpryce:hamkrest:1.4.2.2'
	testCompile 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
	testCompile "org.jetbrains.spek:spek-api:$spek_version"

	compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
	compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'
	compile 'com.fasterxml.jackson.core:jackson-core:2.8.5'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5'

	testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
	testRuntime "org.junit.platform:junit-platform-runner:$junit_version"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

}

junitPlatform {
	filters {
		engines {
			include 'spek'
		}
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

task buildZip(type: Zip) {
	baseName = 'tech-when-service'
	from compileKotlin
	from processResources
	into('lib') {
		from configurations.runtime
	}
}

build.dependsOn buildZip
compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}